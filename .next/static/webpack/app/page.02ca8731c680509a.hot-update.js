"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/CosmoStation.tsx":
/*!*****************************************!*\
  !*** ./src/components/CosmoStation.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CosmosInfo; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst BASE_URL = \"https://apis.mintscan.io/v1\";\nfunction CosmosInfo(param) {\n    let { address } = param;\n    _s();\n    const token = process.env.REACT_APP_COSMOSTATION_API_KEY;\n    const [balances, setBalances] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    async function fetchBalances() {\n        try {\n            const response = await fetch(\"\".concat(BASE_URL, \"/dydx/accounts/\").concat(address, \"/balances\"), {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Authorization\": \"Bearer \".concat(token)\n                }\n            });\n            const data = await response.json();\n            setBalances(data);\n        } catch (error) {\n            console.error(\"Erreur lors de la r\\xe9cup\\xe9ration des balances:\", error);\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchBalances();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Informations sur les balances\"\n            }, void 0, false, {\n                fileName: \"/Users/glory/Documents/Perso/DevPerso/Git/DYDX-Dashboard/src/components/CosmoStation.tsx\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                children: JSON.stringify(balances)\n            }, void 0, false, {\n                fileName: \"/Users/glory/Documents/Perso/DevPerso/Git/DYDX-Dashboard/src/components/CosmoStation.tsx\",\n                lineNumber: 39,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/glory/Documents/Perso/DevPerso/Git/DYDX-Dashboard/src/components/CosmoStation.tsx\",\n        lineNumber: 37,\n        columnNumber: 5\n    }, this);\n}\n_s(CosmosInfo, \"wx+R6Xtm2XvGqfNtICZFHdHec2k=\");\n_c = CosmosInfo;\nvar _c;\n$RefreshReg$(_c, \"CosmosInfo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0Nvc21vU3RhdGlvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUU0QztBQUM1QyxNQUFNRSxXQUFXO0FBTUYsU0FBU0MsV0FBVyxLQUE0QjtRQUE1QixFQUFFQyxPQUFPLEVBQW1CLEdBQTVCOztJQUMvQixNQUFNQyxRQUFRQyxPQUFPQSxDQUFDQyxHQUFHLENBQUNDLDhCQUE4QjtJQUN4RCxNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR1YsK0NBQVFBLENBQUMsRUFBRTtJQUM3QyxlQUFlVztRQUNmLElBQUk7WUFDSCxNQUFNQyxXQUFXLE1BQU1DLE1BQ3RCLEdBQTZCVCxPQUExQkYsVUFBUyxtQkFBeUIsT0FBUkUsU0FBUSxjQUNyQztnQkFDSVUsU0FBUztvQkFDTCxnQkFBZ0I7b0JBQ2hCLCtCQUErQjtvQkFDL0IsaUJBQWlCLFVBQWdCLE9BQU5UO2dCQUMvQjtZQUNKO1lBR0EsTUFBTVUsT0FBTyxNQUFNSCxTQUFTSSxJQUFJO1lBQ2hDTixZQUFZSztRQUNkLEVBQUUsT0FBT0UsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsc0RBQWdEQTtRQUNoRTtJQUNGO0lBQ0VoQixnREFBU0EsQ0FBQztRQUNSVTtJQUNGLEdBQUcsRUFBRTtJQUVMLHFCQUNFLDhEQUFDUTs7MEJBQ0MsOERBQUNDOzBCQUFHOzs7Ozs7MEJBQ0osOERBQUNDOzBCQUNFQyxLQUFLQyxTQUFTLENBQUNkOzs7Ozs7Ozs7Ozs7QUFJeEI7R0FsQ3dCTjtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9Db3Ntb1N0YXRpb24udHN4P2FlMzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuY29uc3QgQkFTRV9VUkwgPSAnaHR0cHM6Ly9hcGlzLm1pbnRzY2FuLmlvL3YxJztcblxudHlwZSBDb3Ntb3NJbmZvUHJvcHMgPSB7XG4gIGFkZHJlc3M6IHN0cmluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29zbW9zSW5mbyh7IGFkZHJlc3MgfTogQ29zbW9zSW5mb1Byb3BzKSB7XG4gICAgY29uc3QgdG9rZW4gPSBwcm9jZXNzLmVudi5SRUFDVF9BUFBfQ09TTU9TVEFUSU9OX0FQSV9LRVk7XG4gICAgY29uc3QgW2JhbGFuY2VzLCBzZXRCYWxhbmNlc10gPSB1c2VTdGF0ZShbXSk7XG4gIGFzeW5jIGZ1bmN0aW9uIGZldGNoQmFsYW5jZXMoKSB7XG4gIHRyeSB7XG4gICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgIGAke0JBU0VfVVJMfS9keWR4L2FjY291bnRzLyR7YWRkcmVzc30vYmFsYW5jZXNgLFxuICAgIHtcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsXG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHt0b2tlbn1gXG4gICAgICAgIH1cbiAgICB9XG4gICAgKTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgc2V0QmFsYW5jZXMoZGF0YSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyZXVyIGxvcnMgZGUgbGEgcsOpY3Vww6lyYXRpb24gZGVzIGJhbGFuY2VzOicsIGVycm9yKTtcbiAgfVxufVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoQmFsYW5jZXMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxoMT5JbmZvcm1hdGlvbnMgc3VyIGxlcyBiYWxhbmNlczwvaDE+XG4gICAgICA8dWw+XG4gICAgICAgIHtKU09OLnN0cmluZ2lmeShiYWxhbmNlcyl9XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICApO1xufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJBU0VfVVJMIiwiQ29zbW9zSW5mbyIsImFkZHJlc3MiLCJ0b2tlbiIsInByb2Nlc3MiLCJlbnYiLCJSRUFDVF9BUFBfQ09TTU9TVEFUSU9OX0FQSV9LRVkiLCJiYWxhbmNlcyIsInNldEJhbGFuY2VzIiwiZmV0Y2hCYWxhbmNlcyIsInJlc3BvbnNlIiwiZmV0Y2giLCJoZWFkZXJzIiwiZGF0YSIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJkaXYiLCJoMSIsInVsIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/CosmoStation.tsx\n"));

/***/ })

});